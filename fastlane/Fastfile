# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Build debug and test APK for screenshots"
  lane :build_and_screengrab do
    gradle(task: "importTranslations assembleDebug assembleAndroidTest")
    capture_android_screenshots()
  end

  desc "Import translations and generate screenshots"
  lane :pre_release do
    gradle(task: "importTranslations importTranslationsForFastlane")
    build_and_screengrab()
  end

  desc "Deploy a new version to the Google Play"
  lane :release do |options|
    gradle(task: "clean assembleRelease")
    upload_to_play_store(track: options[:production] ? "production" : "beta",
                         release_status: "draft",
                         apk: "app/build/outputs/apk/release/app-release.apk",
                         skip_upload_images: true,
                         mapping: "app/build/outputs/mapping/release/mapping.txt")
    version = gradle(task: "androidGitVersionName", flags: "--quiet", print_command: false, print_command_output: false).strip
    release_url = "https://gitlab.com/api/v4/projects/30453147/packages/generic/apk/#{version}/app-release.apk"
    upload_to_server(endPoint: release_url,
                     method: :put,
                     multipartPayload: {},
                     headers: {"Authorization": "Bearer #{File.read('../gitlab_token').strip}"},
                     apk: "app/build/outputs/apk/release/app-release.apk")
    gitlab_create_release(endpoint: "https://gitlab.com/api/v4/",
                          private_token: File.read('../gitlab_token').strip,
                          project_id: "30453147",
                          tag: version,
                          ref: "", # This causes 500 error if the version isn't tagged, but we can't fix it from the client.
                          name: version,
                          assets_links: [{
                                          "name": "APK",
                                          "url": release_url,
                                          "link_type": "package"}])
  end
end
